<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>√Ä faire autour de moi</title>
  <style>
    body { font-family: sans-serif; padding: 20px; }
    input, button { padding: 5px; margin: 5px 0; }
    ul { list-style: none; padding: 0; }
    li { margin-bottom: 10px; }
  </style>
</head>
<body>
  <button onclick="window.location.href='index.html'">Retour √† l'accueil</button>
  <h1>√Ä faire autour de moi</h1>

  <label for="ville">Ville (laisser vide pour g√©olocalisation) :</label><br>
  <input type="text" id="ville" placeholder="ex : Nantes" />
  <button onclick="chercherLieux()">Rechercher</button>

  <div id="resultat">üîç En attente de recherche...</div>

  <script>
    const opentripmapKey = "5ae2e3f221c38a28845f05b661cf623d"; // Cl√© gratuite OpenTripMap

    async function chercherLieux() {
      const ville = document.getElementById("ville").value.trim();
      const resultat = document.getElementById("resultat");
      resultat.innerHTML = "Chargement‚Ä¶";

      let lat, lon;

      try {
        if (ville) {
          // G√©ocodage ville via Nominatim
          const geo = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(ville)}&format=json`)
            .then(r => r.json());
          if (!geo.length) throw new Error("Ville introuvable");
          lat = geo[0].lat;
          lon = geo[0].lon;
        } else {
          // G√©olocalisation navigateur
          const position = await new Promise((resolve, reject) =>
            navigator.geolocation.getCurrentPosition(resolve, reject, { timeout: 10000 })
          );
          lat = position.coords.latitude;
          lon = position.coords.longitude;
        }

        // Appel API OpenTripMap pour r√©cup√©rer les lieux
        const radius = 3000; // rayon en m√®tres
        const lieux = await fetch(`https://api.opentripmap.com/0.1/fr/places/radius?radius=${radius}&lon=${lon}&lat=${lat}&rate=2&format=json&apikey=${opentripmapKey}`)
          .then(r => r.json());

        if (!lieux.length) {
          resultat.innerHTML = "Aucun lieu trouv√©.";
          return;
        }

        // Affichage de la liste
        resultat.innerHTML = `<h2>Lieux int√©ressants √† proximit√©</h2><ul>` +
          lieux.slice(0, 20).map(lieu => {
            const nom = lieu.name || "(Sans nom)";
            const type = lieu.kinds.split(',')[0]; // exemple : "architecture"
            const mapsUrl = `https://www.google.com/maps?q=${lieu.point.lat},${lieu.point.lon}`;
            return `<li><strong>${nom}</strong> <em>(${type})</em><br><a href="${mapsUrl}" target="_blank">Voir sur Google Maps</a></li>`;
          }).join("") +
          `</ul>`;

      } catch (err) {
        resultat.innerHTML = `<span style="color:red">Erreur : ${err.message}</span>`;
        console.error(err);
      }
    }
  </script>
</body>
</html>
